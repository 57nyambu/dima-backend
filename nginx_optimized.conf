# Improved nginx configuration for image server
server {
    listen 80;
    server_name deploy.finarchitect.online;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    server_name deploy.finarchitect.online;

    ssl_certificate /etc/letsencrypt/live/deploy.finarchitect.online/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/deploy.finarchitect.online/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;

    # Gzip compression for text files
    gzip on;
    gzip_vary on;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=uploads:10m rate=10r/m;
    limit_req_zone $binary_remote_addr zone=downloads:10m rate=100r/m;

    # Hidden file upload endpoint (qazsw-upload)
    location /qazsw-upload/ {
        limit_req zone=uploads burst=5 nodelay;
        
        # Allow large files
        client_max_body_size 50M;
        client_body_timeout 30s;
        
        # Proxy to upload handler
        proxy_pass http://127.0.0.1:8080/upload/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Hidden file deletion endpoint (qazsw-delete)
    location /qazsw-delete/ {
        limit_req zone=uploads burst=2 nodelay;
        
        # Proxy to delete handler
        proxy_pass http://127.0.0.1:8080/delete/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Hidden image serving path (qazsw)
    location /qazsw/ {
        limit_req zone=downloads burst=50 nodelay;
        
        # Remove the /qazsw prefix when serving files
        rewrite ^/qazsw/(.*)$ /$1 break;
        
        root /home/prod/cache;
        
        # Try original file first, then fallback to processing
        try_files $uri @process_image_hidden;
        
        # Cache headers for images
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        
        # Enable etag
        etag on;
        
        # CORS headers for images
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS";
        
        # Security
        add_header X-Content-Type-Options "nosniff" always;
        
        # Only allow image files in this hidden path
        location ~* ^/qazsw/.+\.(jpg|jpeg|png|gif|webp|ico|svg)$ {
            # Process the rewrite and serve
            rewrite ^/qazsw/(.*)$ /$1 break;
            root /home/prod/cache;
            try_files $uri @process_image_hidden;
        }
        
        # Block everything else in qazsw path
        location ~* ^/qazsw/ {
            return 403;
        }
    }

    # Image processing fallback for hidden path
    location @process_image_hidden {
        # Proxy to image processing service with original path
        proxy_pass http://127.0.0.1:8080/process$uri;
        proxy_cache_valid 200 1y;
        proxy_cache_valid 404 1m;
    }

    # Block direct access to root paths that were previously accessible
    location ~* ^/(products|categories)/.+\.(jpg|jpeg|png|gif|webp|ico|svg)$ {
        return 403 "Access denied. Images are served through a different path.";
    }

    # Serve other static files (but block direct image access)
    location / {
        root /home/prod/cache;
        
        # Security hardening
        autoindex off;
        
        # Block direct access to images - force use of hidden path
        location ~* \.(jpg|jpeg|png|gif|webp|ico|svg)$ {
            return 403 "Direct image access not allowed";
        }
        
        # File type restrictions
        location ~* \.(php|pl|py|jsp|asp|sh|cgi)$ {
            deny all;
        }
        
        # Allow specific non-image file types only
        location ~* \.(css|js|pdf|txt|zip)$ {
            expires 30d;
            add_header Cache-Control "public, immutable";
        }
        
        # Default fallback
        try_files $uri $uri/ =404;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "OK\n";
        add_header Content-Type text/plain;
    }
}