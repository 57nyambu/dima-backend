# Generated by Django 5.1.3 on 2025-08-23 15:35

import django.contrib.postgres.indexes
import django.contrib.postgres.search
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('business', '0004_create_initial_data'),
        ('orders', '0002_order_order_number'),
        ('products', '0008_alter_productimage_options_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('subtitle', models.CharField(blank=True, max_length=300)),
                ('image', models.ImageField(upload_to='banners/')),
                ('banner_type', models.CharField(choices=[('hero', 'Hero Banner'), ('category', 'Category Banner'), ('promotional', 'Promotional Banner'), ('vendor', 'Vendor Spotlight')], max_length=20)),
                ('link_url', models.URLField(blank=True, help_text='Where banner should link to')),
                ('link_text', models.CharField(blank=True, help_text='Call-to-action text', max_length=50)),
                ('position', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['position', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MarketplaceSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_name', models.CharField(default='Marketplace', max_length=100)),
                ('commission_rate', models.DecimalField(decimal_places=2, default=10.0, max_digits=5)),
                ('currency', models.CharField(default='KES', max_length=3)),
                ('tax_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('min_order_amount', models.DecimalField(decimal_places=2, default=100.0, max_digits=10)),
                ('max_products_per_order', models.IntegerField(default=50)),
                ('enable_reviews', models.BooleanField(default=True)),
                ('enable_wishlist', models.BooleanField(default=True)),
                ('enable_comparison', models.BooleanField(default=True)),
                ('enable_vendor_chat', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Marketplace Settings',
                'verbose_name_plural': 'Marketplace Settings',
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cart', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MarketplaceDispute',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('dispute_type', models.CharField(choices=[('product_not_received', 'Product Not Received'), ('product_damaged', 'Product Damaged/Defective'), ('wrong_product', 'Wrong Product Sent'), ('refund_issue', 'Refund Issue'), ('service_quality', 'Service Quality Issue'), ('other', 'Other')], max_length=30)),
                ('subject', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('status', models.CharField(choices=[('open', 'Open'), ('in_review', 'In Review'), ('resolved', 'Resolved'), ('closed', 'Closed')], default='open', max_length=20)),
                ('admin_notes', models.TextField(blank=True)),
                ('resolution_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buyer_disputes', to=settings.AUTH_USER_MODEL)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disputes', to='orders.order')),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_disputes', to=settings.AUTH_USER_MODEL)),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seller_disputes', to='business.business')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DisputeMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('is_admin', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dispute_messages', to=settings.AUTH_USER_MODEL)),
                ('dispute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='marketplace.marketplacedispute')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='wishlist', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WishlistItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wishlist_items', to='products.product')),
                ('wishlist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='marketplace.wishlist')),
            ],
            options={
                'unique_together': {('wishlist', 'product')},
            },
        ),
        migrations.AddField(
            model_name='wishlist',
            name='products',
            field=models.ManyToManyField(through='marketplace.WishlistItem', to='products.product'),
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='marketplace.cart')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cart_items', to='products.product')),
            ],
            options={
                'unique_together': {('cart', 'product')},
            },
        ),
        migrations.CreateModel(
            name='FeaturedProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Custom title for featuring', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Custom description for featuring')),
                ('position', models.PositiveIntegerField(default=0, help_text='Display order')),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='featured_listings', to='products.product')),
            ],
            options={
                'ordering': ['position', '-created_at'],
                'indexes': [models.Index(fields=['is_active', 'start_date', 'end_date'], name='marketplace_is_acti_7dcb34_idx')],
            },
        ),
        migrations.CreateModel(
            name='MarketplaceNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('order_placed', 'Order Placed'), ('order_confirmed', 'Order Confirmed'), ('order_shipped', 'Order Shipped'), ('order_delivered', 'Order Delivered'), ('payment_received', 'Payment Received'), ('dispute_opened', 'Dispute Opened'), ('dispute_resolved', 'Dispute Resolved'), ('product_review', 'Product Review'), ('vendor_review', 'Vendor Review'), ('stock_low', 'Low Stock Alert'), ('new_message', 'New Message')], max_length=30)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('business', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='business.business')),
                ('dispute', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='marketplace.marketplacedispute')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='orders.order')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='marketplace_notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'is_read'], name='marketplace_user_id_a165e6_idx'), models.Index(fields=['notification_type'], name='marketplace_notific_f05af2_idx')],
            },
        ),
        migrations.CreateModel(
            name='ProductComparison',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='My Comparison', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('products', models.ManyToManyField(related_name='comparisons', to='products.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comparisons', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'name')},
            },
        ),
        migrations.CreateModel(
            name='ProductSearchIndex',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('search_vector', django.contrib.postgres.search.SearchVectorField()),
                ('business_name', models.CharField(max_length=225)),
                ('business_verified', models.BooleanField(default=False)),
                ('category_name', models.CharField(max_length=100)),
                ('category_path', models.TextField()),
                ('price_range', models.CharField(max_length=20)),
                ('avg_rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('review_count', models.IntegerField(default=0)),
                ('view_count', models.IntegerField(default=0)),
                ('sales_count', models.IntegerField(default=0)),
                ('wishlist_count', models.IntegerField(default=0)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='search_index', to='products.product')),
            ],
            options={
                'indexes': [django.contrib.postgres.indexes.GinIndex(fields=['search_vector'], name='marketplace_search__164e4a_gin'), models.Index(fields=['price_range'], name='marketplace_price_r_fa6e6c_idx'), models.Index(fields=['avg_rating'], name='marketplace_avg_rat_cdea93_idx'), models.Index(fields=['business_verified'], name='marketplace_busines_ebf51b_idx')],
            },
        ),
        migrations.CreateModel(
            name='VendorSearchIndex',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('search_vector', django.contrib.postgres.search.SearchVectorField()),
                ('avg_rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('review_count', models.IntegerField(default=0)),
                ('product_count', models.IntegerField(default=0)),
                ('order_count', models.IntegerField(default=0)),
                ('completion_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('business', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='search_index', to='business.business')),
            ],
            options={
                'indexes': [django.contrib.postgres.indexes.GinIndex(fields=['search_vector'], name='marketplace_search__ad4d51_gin'), models.Index(fields=['avg_rating'], name='marketplace_avg_rat_dd3199_idx'), models.Index(fields=['completion_rate'], name='marketplace_complet_ad0638_idx')],
            },
        ),
    ]
